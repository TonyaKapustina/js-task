// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
  @return asset($base, 'images/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
  @return asset($base, 'fonts/', $path);
}

/// Returns URL to a SVG based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function svg($path, $base: $base-url) {
  @return asset($base, 'svg/', $path);
}

/// Return responsive calc value with vw offset
/// @param {Number} $initial - mobile size value
/// @param {Number} $final - desktop size value
/// @param {String} $unit - property units, default: 'px'
/// @return {calc()}
/// @require desktop size according to mock-up
@function vw($initial, $final, $units: 'px') {
  $result: ($final - $initial) / (1920 / 100);
  @return calc(#{$initial}#{$units} + #{$result}vw);
}
